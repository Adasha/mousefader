const VALID_MODES=new Set(['mousemove','enterframe','redraw']),DEFAULT_MODE='redraw',DEFAULT_FPS=30,DEFAULT_RUNOFF=100,DEFAULT_ATTACK=1,DEFAULT_DECAY=1,VALID_EFFECTS={opacity:{min:0,max:1,style:'opacity',unit:''},scale:{style:'transform'},translateX:{},translateY:{},translateZ:{},rotate:{},blur:{min:0}};let _params,_frameLoop,_lastDeltas,_effects={},_pointer={};const constrain=(c,e,f)=>{return'number'==typeof c?(void 0!==e&&null!==e&&'number'==typeof e&&(c=Math.max(c,e)),void 0!==f&&null!==f&&'number'==typeof f&&(c=Math.min(c,f)),c):NaN},delta=(c,e,f)=>(f-e)*c+e;class MouseFader{constructor(c,e={}){let f;if(c instanceof HTMLElement)f=c.childNodes;else if(c instanceof NodeList)f=c;else return void console.log(`${c} is not a suitable target`);return 1>f.length?void console.log(`No children found on ${c}`):void(_params=e,this.nodes=f,_lastDeltas=Array(f.length),document.addEventListener('mousemove',this.updatePointer),this.init())}get mode(){return _params.mode||DEFAULT_MODE}set mode(c){_params.mode&&c===_params.mode||(_params.mode=VALID_MODES.has(c)?c:DEFAULT_MODE)}get FPS(){return _params.FPS||DEFAULT_FPS}set FPS(c){_params.FPS=constrain(c,0)}get threshold(){return _params.hasOwnProperty('threshold')?_params.threshold:0}set threshold(c){_params.threshold=constrain(c,0)}get runoff(){return _params.hasOwnProperty('runoff')?_params.runoff:DEFAULT_RUNOFF}set runoff(c){_params.runoff=constrain(c,0)}get attack(){return _params.hasOwnProperty('attack')?_params.attack:1}set attack(c){_params.attack=constrain(c,0,1)}get decay(){return _params.hasOwnProperty('decay')?_params.decay:1}set decay(c){_params.decay=constrain(c,0,1)}addEffect(c,e,f){if(VALID_EFFECTS.hasOwnProperty(c)){let g=VALID_EFFECTS[c];_effects[c]={near:constrain(e,g.min,g.max),far:f===void 0?e:constrain(f,g.min,g.max)}}else console.log(`${c} is not a supported effect type`)}hasEffect(c){return _effects.hasOwnProperty(c)}effect(c){return _effects[c]}removeEffect(c){this.hasEffect(c)&&delete _effects[c]}init(){this.update=this.update.bind(this),window.requestAnimationFrame(this.update)}updatePointer(c){_pointer.x=c.clientX,_pointer.y=c.clientY}update(){let e,f,g,h,j,k,l,m,n=document.documentElement;for(let o=0;o<this.nodes.length;o++)if(e=this.nodes[o],f=_lastDeltas[o],g=e.getBoundingClientRect(),0<=g.right&&g.left<=n.clientWidth&&0<=g.bottom&&g.top<=n.clientHeight||1>f){if(h=_pointer.x-0.5*(g.left+g.right),j=_pointer.y-0.5*(g.top+g.bottom),k=Math.sqrt(h*h+j*j),l=constrain((k-this.threshold)/this.runoff,0,1),m=f?f+(l-f)*(l>f?this.decay:this.attack):l,1>=m){let p=[],q=[];this.hasEffect('opacity')&&(e.style.opacity=delta(m,this.effect('opacity').near,this.effect('opacity').far)),this.hasEffect('scale')&&p.push('scale('+delta(m,this.effect('scale').near,this.effect('scale').far)+')'),this.hasEffect('translateZ')&&p.push('translateZ('+delta(m,this.effect('translateZ').near,this.effect('translateZ').far)+'px)'),this.hasEffect('blur')&&q.push('blur('+delta(m,this.effect('blur').near,this.effect('blur').far)+'px)'),e.style.transform=p.join(', ')||'none',e.style.filter=q.join(', ')||'none'}_lastDeltas[o]=m}'redraw'===this.mode&&window.requestAnimationFrame(this.update)}}